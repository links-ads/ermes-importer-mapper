services:
  database:
    image: kartoza/postgis:16-3.4
    volumes:
      - psgdata:/var/lib/postgresql
    environment:
      - POSTGRES_DB=${DATABASE_NAME}
      - POSTGRES_USER=${DATABASE_USER}
      - POSTGRES_PASS=${DATABASE_PASS}
      - ALLOW_IP_RANGE=0.0.0.0/0
      - FORCE_SSL=TRUE
    restart: unless-stopped
    healthcheck:
      test: "PGPASSWORD=${DATABASE_PASS} pg_isready -h 127.0.0.1 -U ${DATABASE_USER} -d ${DATABASE_NAME}"

  geoserver:
    image: kartoza/geoserver:2.24.2
    restart: unless-stopped
    environment:
      - JAVA_OPTS='-Dorg.geotools.coverage.io.netcdf.enhance.ScaleMissing=true'
      - GEOSERVER_ADMIN_USER=admintest
      - GEOSERVER_ADMIN_PASSWORD=geoservertest
      - GEOSERVER_DATA_DIR=${GEOSERVER_DATA_DIR}
      - GEOWEBCACHE_CACHE_DIR=${GEOWEBCACHE_CACHE_DIR}
      - INITIAL_MEMORY=${INITIAL_MEMORY}
      - MAXIMUM_MEMORY=${MAXIMUM_MEMORY}
      - STABLE_EXTENSIONS=netcdf-plugin,wmts-multi-dimensional-plugin,wps-download-plugin
      - COMMUNITY_EXTENSIONS=ncwms-plugin
      - GEOSERVER_CSRF_WHITELIST=${GEOSERVER_HOST}
      - EXISTING_DATA_DIR=true
    volumes:
      - gsvdata:${GEOSERVER_DATA_DIR}:rw
    depends_on:
      - database

  importer:
    build:
      context: .
      dockerfile: containers/importer/Dockerfile
      args:
        - TARGET=${TARGET}
    image: links/importer:${TARGET}
    env_file: .env
    command: importer
    volumes:
      - gsvdata:/opt/geoserver/data_dir:rw
    depends_on:
      - database
    restart: unless-stopped

  webserver:
    image: links/importer:${TARGET}
    env_file: .env
    command: webserver
    volumes:
      - gsvdata:/opt/geoserver/data_dir
    depends_on:
      - importer
      - database
      - geoserver
    restart: unless-stopped
